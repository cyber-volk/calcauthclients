openapi: 3.0.0
info:
  title: Calculator Authentication API
  version: 1.0.0
  description: API documentation for the Calculator Authentication System

servers:
  - url: /api
    description: API base URL

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        role:
          type: string
          enum: [user, agent, admin]
        createdAt:
          type: string
          format: date-time
        agentId:
          type: string
          nullable: true

    Site:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time

    Form:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        data:
          type: string
        siteId:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time

paths:
  /users:
    get:
      summary: Get users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 50
                password:
                  type: string
                  minLength: 6
                  maxLength: 100
                role:
                  type: string
                  enum: [user, agent, admin]
                  default: user
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /sites:
    get:
      summary: Get sites
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of sites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create site
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                description:
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: Site created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /forms:
    get:
      summary: Get forms
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: siteId
          schema:
            type: string
          description: Filter forms by site ID
      responses:
        '200':
          description: List of forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create form
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - data
                - siteId
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                data:
                  type: string
                siteId:
                  type: string
      responses:
        '200':
          description: Form created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
        '404':
          description: Site not found
        '500':
          description: Internal server error
